name: Python package tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]

    - name: Run tests
      run: |
        python -c "import imppkg; from imppkg import harmonic_mean; print(harmonic_mean.harmonic_mean([1, 2, 3]))"
        python -m pytest -sv
# name: CI Tutorial

# on:
#   - push

# jobs:
#   # hello:
#   #   name: Hello
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - name: Hello
#   #       run: echo "Hello, world!"
#   format:
#     name: Check formatting
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v4.0.0
#         with:
#           python-version: "3.10"
#       - name: Install tox
#         run: python -m pip install tox
#       - name: Run tox
#         run: tox -vvv
#   # format:
#   #   name: Check formatting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: "3.10"

  #     - name: Install tox
  #       run: python -m pip install tox

  #     - name: Run black
  #       run: tox -e format
  #       working-directory: ch07/first-python-package # You don't need this in your package

  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: "3.10"

  #     - name: Install tox
  #       run: python -m pip install tox

  #     - name: Run flake8
  #       run: tox -e lint
  #       working-directory: ch07/first-python-package # You don't need this in your package

  # typecheck:
  #   name: Type check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: "3.10"

  #     - name: Install tox
  #       run: python -m pip install tox

  #     - name: Run mypy
  #       run: python -m tox -e typecheck
  #       working-directory: ch07/first-python-package # You don't need this in your package

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python:
  #         - version: "3.10"
  #           toxenv: "py310"
  #         - version: "3.9"
  #           toxenv: "py39"
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: ${{ matrix.python.version }}

  #     - name: Install tox
  #       run: python -m pip install tox

  #     - name: Run pytest
  #       run: tox -e ${{ matrix.python.toxenv }}
  #       working-directory: ch07/first-python-package # You don't need this in your package

  # build_source_dist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: "3.10"

  #     - name: Install build
  #       run: python -m pip install build

  #     - name: Run build
  #       run: python -m build --sdist
  #       working-directory: ch07/first-python-package # You don't need this in your package

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ch07/first-python-package/dist/*.tar.gz

  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, windows-2019, macOS-10.15]

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.0.0
  #       with:
  #         python-version: "3.10"

  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel==2.3.1

  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheels
  #       working-directory: ch07/first-python-package # You don't need this in your package

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./ch07/first-python-package/wheels/*.whl # Update to match root of package

  # publish:
  #   name: Publish package
  #   if: startsWith(github.event.ref, 'refs/tags/v')
  #   needs:
  #     - format
  #     - lint
  #     - typecheck
  #     - test
  #     - build_source_dist
  #     - build_wheels
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: artifact
  #         path: ./ch07/first-python-package/dist # Update to match root of package

  #     - uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
  #         packages_dir: ./ch07/first-python-package/dist/ # You don't need this in your package
